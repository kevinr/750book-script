#!/usr/bin/env python

# takes as input one or more 750 Words export file(s), outputs a LaTeX file on stdout
# usage: 750book-latex.py INPUT[..]

from mako.template import Template
import sys


def main():

    global template

    if len(sys.argv) < 2:
        print "Usage: %s INPUT[..] OUTPUT" % (sys.argv[0])
        sys.exit(1)

    inputs = sys.argv[1:]
    output = sys.stdout

    data = { 'title': "750 Words ``Morning Pages''",
            'author': "Kevin Riggle",
            'date_string': 'June 2010',
            'entries': [
                Year( '2010', 
                    [
                        Month('June 2010',
                            [
                                {   'date': 'Foo, Bar 17th, 2010',
                                    'text': 'Lorem ipsum dolor sit amet\ldots',
                                    'words': '769',
                                    'time': '257 minutes',
                                },
                            ],
                        ),
                    ],
                ),
                Year( '2011',
                    [
                        Month('June 2011',
                            [
                                {   'date': 'Tuesday, June 7th, 2011',
                                    'text': 'Lorem ipsum dolor sit amet\ldots',
                                    'words': '769',
                                    'time': '257 minutes',
                                },
                            ],
                        ),
                    ],
                ),
            ],
    }

    compiled_template = Template(template)
    output.write(compiled_template.render(**data))


class Year(list):
    def __init__(self, year, months):
        list.__init__(self, months)
        self._year = year

    def __str__(self):
        return self._year

class Month(list):
    def __init__(self, month, entries):
        list.__init__(self, entries)
        self._month = month

    def __str__(self):
        return self._month


template = """%%% LaTeX autogenerated by 750book-latex.py; do not hand-modify!

\documentclass{memoir}                  %% memoir class in default 10 points

%% frobs to provide
%% Title:, Author:
%% XXX TODO automatically put entries in chronological order
%% when given multiple files, output: single file, one file per year, one file per month
%% include statistics?
%% optimize for: screen, print
%% font size: normal, large
%% ?? attitude: informal, formal  (I'd prefer to get this Just Right)
%% font: serif, sans-serif


%%\parindent0pt  \parskip10pt             %% make block paragraphs
%%\\raggedright                            %% do not right justify

\setsecnumdepth{none}

\pagestyle{headings}
\\nouppercaseheads
%% XXX TODO add the author's name to the recto heading
%% XXX TODO move the page number to the footer on all pages

\\renewcommand{\cftchapterdotsep}{\cftdotsep}

%% XXX TODO redefine epigraph so I don't need to use the source field
%%\setlength{\epigraphrule}{0pt}          %% no rule separating the (nonexistent) epigraph source


\\title{${title}}
\\author{${author}}
\date{${date_string}}

\\begin{document}                        %% End of preamble, start of text.

%%% title page
\pagestyle{empty}
%% center relative to page rather than typeblock
\calccentering{\unitlength}
\\begin{adjustwidth*}{\unitlength}{-\unitlength}
    \\null\\vfil     %% vertically center the title
    {\\begin{center}\Huge \\bfseries \\thetitle \par\end{center}\\vskip 0.5em}
    {\\begin{center} 
        \huge \\bfseries \lineskip 0.5em%% 
        \\begin{tabular}[t]{c} \\theauthor \end{tabular}\par\end{center}}
    {\\begin{center}\huge \\bfseries \\thedate \par\end{center}}
    \\vfil
\end{adjustwidth*}
\cleardoublepage

\\frontmatter                            %% only in book class (roman page #s)
%%% table of contents
\\tableofcontents*                       %% Print table of contents

%%% entries
\mainmatter                             %% only in book class (arabic page #s)

% for year in entries:
## only print the year when there are multiple years in the book
${len(entries) == 1 and '%%' or ''}\\book{${year}}

%   for month in year:
## always print the month, even when there's only one month in the book
\\part{${month}}

%       for entry in month:
\chapter{${entry['date']}}
${entry['text']}
\epigraph{}{Words: ${entry['words']} \\\\ Total time: ${entry['time']}}
%       endfor

%   endfor
% endfor
 
\end{document}                          %% The required last line
"""


if __name__ == '__main__': main()
